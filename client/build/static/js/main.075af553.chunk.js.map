{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","projeadi","adisoyadi","uniadi","yil","projes","setProjes","proje","setProje","handleChange","e","target","name","value","prevInput","useEffect","fetch","then","res","ok","json","jsonRes","className","onChange","placeholder","onClick","preventDefault","yeniProje","axios","post","map","id","_id","delete","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAwFeA,MApFf,WAAgB,IAAD,EACeC,mBAAS,CACnC,CACEC,SAAU,GACVC,UAAW,GACXC,OAAQ,GACRC,IAAI,MANK,mBACNC,EADM,KACEC,EADF,OAUaN,mBACxB,CACEC,SAAU,GACVC,UAAW,GACXC,OAAQ,GACRC,IAAI,KAfK,mBAUNG,EAVM,KAUCC,EAVD,KA2Bb,SAASC,EAAaC,GAAI,IAAD,EACDA,EAAEC,OAAjBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACbL,GAAS,SAAAM,GACP,kCAEOA,GAFP,kBAGKF,EAAOC,OAyBhB,OAvCAE,qBAAU,WACRC,MAAM,WAAWC,MAAK,SAAAC,GACpB,GAAGA,EAAIC,GACL,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAAO,OAAIf,EAAUe,SAmC7B,sBAAKC,UAAU,MAAf,UACE,mDACA,iCACE,uBAAOC,SAAUd,EAAcG,KAAK,WAAWC,MAAON,EAAMN,SAAUuB,YAAY,mBAClF,uBAAOD,SAAUd,EAAcG,KAAK,YAAYC,MAAON,EAAML,UAAUsB,YAAY,yBACnF,uBAAOD,SAAUd,EAAcG,KAAK,SAASC,MAAON,EAAMJ,OAAQqB,YAAY,kBAC9E,uBAAOD,SAAUd,EAAcG,KAAK,MAAMC,MAAON,EAAMH,IAAKoB,YAAY,aAExE,wBAASC,QA5Bf,SAAmBf,GACjBA,EAAEgB,iBACF,IAAMC,EAAY,CAChB1B,SAAUM,EAAMN,SAChBC,UAAWK,EAAML,UACjBC,OAAQI,EAAMJ,OACdC,IAAKG,EAAMH,KAGbwB,IAAMC,KAAK,aAAcF,IAmBrB,2BAKDtB,EAAOyB,KAAI,SAAAvB,GACV,OAEE,6BACE,+BAAKA,EAAMN,SAAX,MAAwBM,EAAML,UAA9B,MAA4CK,EAAMJ,OAAlD,MAA6DI,EAAMH,IAAnE,IAAwE,wBAAQqB,QAAS,kBAvBjFM,EAuBgGxB,EAAMyB,IAtBtHJ,IAAMK,OAAO,QAAUF,QACvBG,MAAM,iBAFR,IAAkBH,GAuBgE,6BCpErEI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.075af553.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from \"axios\";\n\nfunction App() {\n  const [projes, setProjes] = useState([\n    {\n      projeadi: '',\n      adisoyadi: '',\n      uniadi: '',\n      yil:''\n    }\n  ])\n\n  const [proje, setProje] = useState(\n    {\n      projeadi: '',\n      adisoyadi: '',\n      uniadi: '',\n      yil:''\n    }\n  )\n\n  useEffect(() => {\n    fetch('/projes').then(res => {\n      if(res.ok) {\n        return res.json()\n      }\n    }).then(jsonRes => setProjes(jsonRes))\n  })\n\n  function handleChange(e) {\n    const {name, value} = e.target;\n    setProje(prevInput => {\n      return(\n        {\n          ...prevInput,\n          [name]: value\n        }\n      )\n    })\n  }\n\n  function ProjeEkle(e) {\n    e.preventDefault();\n    const yeniProje = {\n      projeadi: proje.projeadi,\n      adisoyadi: proje.adisoyadi,\n      uniadi: proje.uniadi,\n      yil: proje.yil\n    }\n\n    axios.post('/yeniproje', yeniProje); \n\n\n  }\n\n  function projeSil(id) {\n    axios.delete('/sil/' + id);\n    alert(\"proje silindi\");\n  }\n\n  return (\n    <div className=\"App\">\n      <h3>Bitirme Projeleri</h3>\n      <form>\n        <input onChange={handleChange} name=\"projeadi\" value={proje.projeadi} placeholder=\"Proje Adı\" ></input>\n        <input onChange={handleChange} name=\"adisoyadi\" value={proje.adisoyadi}placeholder=\"Adı Soyadı\" ></input>\n        <input onChange={handleChange} name=\"uniadi\" value={proje.uniadi} placeholder=\"Üniversite\" ></input>\n        <input onChange={handleChange} name=\"yil\" value={proje.yil} placeholder=\"Yıl\" ></input>\n\n        <button  onClick={ProjeEkle}>Proje Ekle</button>\n      </form>\n\n      \n\n      {projes.map(proje => {\n        return (\n          \n          <ul>\n            <h5>{proje.projeadi} - {proje.adisoyadi} - {proje.uniadi} - {proje.yil} <button onClick={() => projeSil(proje._id)}>Sil</button></h5>\n          </ul>\n        ) \n      })}\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}